#%Module1.0###################################################################

module-whatis "NEMO Stellar Dynamics Toolbox"

# get full pathname for this script file
set scriptpath "${ModulesCurrentModulefile}"

# if modulefile script name is a symlink, resolve it
if { "[file type "$scriptpath"]" eq "link" } {
    set scriptpath "[file readlink "$scriptpath"]"
}


# get directory holding this modulefile script and others
set modulefileroot "[file dirname "$scriptpath"]"

# get name of modulefile script we are loading
set modulefilename "[file tail "$scriptpath"]"

# determine modulefile script version
set modulefilever "[file dirname "$modulefileroot"]"
set modulefilever "[file tail "$modulefilever"]"

# point to component top-level root folder
set componentroot "[file dirname "$modulefileroot"]"
set componentroot "[file dirname "$componentroot"]"

# get component folder name
set componentname "[file tail "$componentroot"]"

# get oneAPI top-level root folder
set oneapiroot "[file dirname "$componentroot"]"



set nemo "[file dirname $modulefileroot]"



# On load print component name and version being loaded
if { [ module-info mode load ] } {
    puts stderr "Loading $modulefilename version $modulefilever"
    puts stderr "found module NEMO=$nemo"
}

# On `module unload` print component module name and version being removed
# Include `module list` message only if this modulefile loads dependent modules
if { [ module-info mode ] == "unload" || [ module-info mode ] == "remove" } {
    puts stderr "Removing $modulefilename version $modulefilever"
    puts stderr "Use `module list` to view any remaining dependent modules."
}

# it is better to keep this esoteric tcl code here, and not a nemo_start.tcl
# since the load/unload need to work properly ?

prepend-path PATH            $nemo/bin
prepend-path LD_LIBRARY_PATH $nemo/lib
prepend-path MANPATH         $nemo/man

set nemover  [string trim [read [open $nemo/VERSION r]]]
puts stderr "NEMO version $nemover"

setenv NEMOOBJ     $nemo/obj
setenv NEMODOC     $nemo/man/doc
setenv NEMODAT     $nemo/data
setenv NEMOINC     $nemo/inc
setenv NEMOSRC     $nemo/src
setenv BTRPATH   .:$nemo/obj/bodytrans
setenv POTPATH   .:$nemo/obj/potential:$nemo/obj/acc
setenv ACCPATH   .:$nemo/obj/potential:$nemo/obj/acc
setenv MANIPPATH .:$nemo/obj/manip:$nemo/usr/dehnen/falcON/manip
#setenv NEMOSYS     [uname -s]
#setenv NEMOSITE    [hostname]

setenv NEMOVER    $nemover
