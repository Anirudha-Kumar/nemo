DIR = src/image/fits
BIN = ccdfits fitsccd scanfits fitsglue fitshead
NEED = $(BIN) ccdmath ccdstat

DATA = ccd.in ccd.out fits.in map001.fits map002.fits map003.fits cube.fits \
	map004.fits  map004.ccd map004a.ccd 

help:
	@echo $(DIR)

need:
	@echo $(NEED)

clean:
	@echo Cleaning $(DIR)
	@rm -f $(DATA)

NBODY = 10
FIE = 10*%x+sqrt(%y)

#all:	$(BIN) bitpix64
all:	$(BIN) 

ccd.in:
	@echo Creating $@
#	ccdmath out=ccd.in "fie=10*%x+sqrt(%y)"  size=10,10,1
	ccdmath out=ccd.in "fie=$(FIE)"  size=10,10,1	

map001.fits:
	ccdmath "" - "rang(0,1)" size=10,10,1 seed=1 | ccdfits - map001.fits ; nemo.coverage ccdfits.c

map002.fits:
	ccdmath "" - "rang(0,1)" size=10,10,1 seed=2 | ccdfits - map002.fits; nemo.coverage ccdfits.c

map003.fits:
	ccdmath "" - "rang(0,1)" size=10,10,1 seed=3 | ccdfits - map003.fits; nemo.coverage ccdfits.c

bitpix64:
	ccdmath "" map004.ccd "%x+%y" size=10,10,1 
	ccdfits map004.ccd map004.fits bitpix=64 ; nemo.coverage ccdfits.c
	fitsccd map004.fits map004a.ccd; nemo.coverage fitsccd.c
	ccdmath map004a.ccd,map004.ccd - %1-%2 | ccdstat -

ccdfits: ccd.in
	@echo Running $@
	ccdfits ccd.in fits.in; nemo.coverage ccdfits.c

fitsccd: ccdfits
	@echo Running $@
	fitsccd fits.in ccd.out; nemo.coverage fitsccd.c
	@echo Testing ccd-fits-ccd with "FIE=$(FIE)"
	ccdmath ccd.in,ccd.out - %1-%2 | ccdstat -

scanfits: ccdfits
	@echo Running $@
	scanfits fits.in	; nemo.coverage scanfits.c


fitsglue: map001.fits map002.fits map003.fits
	@echo Running $@
	fitsglue map%03d.fits cube.fits inlist=1:3 ; nemo.coverage fitsglue.c
	fitshead map001.fits | grep DATA; nemo.coverage fitshead.c
	fitshead map002.fits | grep DATA
	fitshead map003.fits | grep DATA
	fitshead cube.fits | grep DATA ; nemo.coverage fitshead.c
	

fitshead: map003.fits
	@echo Running $@
	fitshead map003.fits; nemo.coverage fitshead.c
