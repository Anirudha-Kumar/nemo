#! /bin/csh -f
#
#   A NEMO CPU benchmark - 
#  	it will excersize a few typical Nbody codes and use an
#	average. The baseline was a pentium-600 where each integrator
#	would take about 30 seconds
#
set tmp    = bench$$
set nbody0 = 3072
set nbody1 = 10240
set nbody2 = 10240
set nbody3 = 1000000
set size   = 256
set clean  = 1

foreach a ($*)
  set $a
end

mkdir $tmp
cd $tmp

echo "NEMOBENCH: (2018-01-07) $tmp : nbody0=$nbody0 nbody1=$nbody1 nbody3=$nbody3 size=$size clean=$clean tmp=$tmp"
echo `hostname` 
echo `uname -a`  
echo `date`


if (0) then
    echo 'Needs:  mkplummer nbody0 hackcode1 gyrfalcON'

    echo -n "mkplummer:  "
    time mkplummer out=nbody1.in nbody=$nbody1 seed=123 >& mkplummer.log
    echo -n "nbody0:     "
    time nbody0 in=nbody1.in out=nbody1.out1 >& nbody0.log
    echo -n "hackcode1:  "
    time hackcode1 in=nbody1.in out=nbody1.out2 tstop=10 >& hackcode1.log
    #echo -n "gyrfalcON:   "
    time gyrfalcON in=nbody1.in out=nbody1.out3 >& gyrfalcON.log 
    echo -n "scfm:       "
    time runscfm in=`pwd`/nbody1.in outdir=nbody1.run nsteps=300 >& scfm.log

else
    echo 'Times:  directcode hackcode1 mkplummer gyrfalcON mkspiral ccdmath ccdpot'

    time directcode nbody=$nbody0 help=c                                             >& bench.directcode.log
    time hackcode1 nbody=$nbody1  help=c                                             >& bench.hackcode1.log
    time mkplummer p1 $nbody2; time gyrfalcON p1 . kmax=6 tstop=2 eps=0.05 help=c    >& bench.gyrfalcon.log
    time mkspiral s0 $nbody3 nmodel=40 help=c                                        >& bench.mkspiral.log
    time ccdmath "" c0 'ranu(0,1)' size=$size seed=123; time ccdpot c0 . help=c      >& bench.ccdpot.log
    
    grep CPU_USAGE bench.*.log

    if ($clean) then
       echo Cleaning $tmp
       cd ..
       rm -rf $tmp
    endif
    
endif

