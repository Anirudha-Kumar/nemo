#! /bin/csh -f
#
#  P600/     116.510u 17.390s 2:41.66 82.8%     0+0k 0+0io 778435pf+0w
# P1600/
#
#  History:     29-mar-2004   for NEMO V3.2
#                4-may-2004   various new keywords and cfitsio optional install

# todo: nemo needs to use -lcpgplot for pgplot also 

set pgplot=1		# install PGPLOT
set intel=0		# pick intel compiler (astromake)
set gcc=0		# pick gcc version (astromake)
set falcon=1		# compile gyrfalcON
set anonymous=1		# anonymous CVS ?
set cvsroot=0		# override the official CVSROOT
set vogl=1		# compile vogl
set single=0            # singe or double (default) precision
set all=1		# make all binaries , or just testsuite?
set clean=1		# remove old nemo directory before installing
set branch=()		# use a CVS branch name?
set yapp=(/null)	# set a YAPP device during the install
set cfitsio=()		# point to the compressed tar file for CFITSIO
set reuse=0             # don't clean and use CVS, just reuse the current nemo tree

foreach _a ($*)
  set $_a
end

#   if reusing current tree, make sure we're not removing the directory
if ($reuse) then
  set clean=0
endif
  
if ($?NEMO) then
  echo Cannot test if NEMO=$NEMO is present already
  exit 1
endif

if ($anonymous) then
 setenv CVSROOT :pserver:anonymous@cvs.astro.umd.edu:/home/cvsroot
endif

#if ($?CVSROOT == 0) then
#
#endif

#		pick another GNU compiler 
if ($gcc) then
   source /astromake/astromake_start
   astroload -v $gcc gcc
endif

#		pick intel compiler (ifort means >= 8.0)
if ($intel) then
  source /astromake/astromake_start
  astroload intel
  setenv CC icc
  setenv CXX icpc
  setenv F77 ifort
endif

if ($clean) rm -rf nemo

#		pick a certain CVS release, if requested
#		then get the source
if ($reuse == 0) then
  if ($#branch) then
    echo cvs: Using branch $branch
    set cvs_rev=(-r $branch)
  else
    echo cvs: Using default MAIN branch
    set cvs_rev=()
  endif
  cvs -Q checkout $cvs_rev nemo
endif


cd nemo
if (! -e local) mkdir local

if ($reuse) then
  echo DISTCLEAN
  make distclean >& install.distclean.log
endif

if ($pgplot && $reuse == 0) then   
  (cd local; cvs -Q checkout pgplot)
endif

if (-e $cfitsio) then
  echo Installing bootstrapping cfitsio
  if (! -e include) ln -s inc include
  (cd local; tar zxf $cfitsio)
  src/scripts/cfitsio.install >& install.cfitsio.log
  echo STATUS=$status
  set cfitsio=1
else
  set cfitsio=0
endif



set copts=()
# set copts=($copts --disable-gsl)
if ($pgplot) set copts=($copts --with-yapp=pgplot --with-pgplot-prefix=`pwd`/lib)
if ($cfitsio) set copts=($copts --enable-cfitsio)
if ($single) set copts=($copts --enable-single)

echo Running configure $copts
echo configure $copts  >& install.config.log
./configure  $copts   >>& install.config.log
source nemo_start
make postconfig

source NEMORC.local

if ($#yapp > 0) setenv YAPP $yapp

if ($pgplot) then
  echo "Compiling internal pgplot (logfile: install.pgplot.log)"
  make pgplot >& install.pgplot.log
endif

rehash
make libs

if ($vogl) then
  echo "Compiling vogl (logfile: install.vogl.log)"
  make vogl >& install.vogl.log
endif

if ($all) then
  make bins
  src/scripts/testsuite
else
  src/scripts/testsuite -b
endif

if ($falcon) then
  ( cd usr/dehnen/falcON; make nemo_bins)  >& install_falcON.log
endif



echo All done.
