#! /bin/csh -f
#
#  5-mar-2004     for 1st nbody-school                             PJT 
# 20-apr-2004     minor things for fam04                           pjt
# 12-jul-2005     many changed for 2nd nbody-school MODEST5c       PJT
#
#  Removed any local directory called manybody and installs a new manybody tree
#  The default should be executed from the home directory, such that
#  MANYBODY becomes $HOME/manybody
#
#  Example usage:
#  manybody_pkg/install_manybody cvs=0 pkg=`pwd`/manybody_pkg > & LOG1
#  

set pgplot=1
set gcc=0
set falcon=1
set cvs=0

#  things that have versions
set gsl=1.4
set fewbody=0.21
set glstarview=0.6-devel
set hnbody=1.0.3-linux-x86
set acs=lite-1.2.1
set ruby=1.8.2
set fltk=1.1.4

set pkg=/home/manybody_pkg/

foreach _a ($*)
  set $_a
end

if (-d /astromake) then
  source /astromake/astromake_start
endif

set fltk=$pkg/fltk/fltk-1.1.4-source.tar.gz

# remove the old manybody
rm -rf manybody


# get all the new stuff via CVS and/or tarballs
if ($cvs) then
  echo CVS: manybody/starcluster
  cvs -Q co manybody/starcluster
  echo CVS: manybody/starlab
  cvs -Q co manybody/starlab
  cd manybody
  echo CVS: partiview
  cvs -Q co partiview
  echo CVS: nemo
  cvs -Q co nemo
  echo CVS: pgplot
  (cd nemo; mkdir local; cvs -Q co pgplot)
  echo TAR: $fltk
  tar -C partiview/src -zxf $fltk
else 
  echo TAR: 
  mkdir manybody
  cd manybody
  tar zxf $pkg/nemo/nemo_cvs.tar.gz
  tar zxf $pkg/starlab/starlab_cvs.tar.gz
  tar zxf $pkg/partiview/partiview_cvs.tar.gz
  (cd partiview_cvs/src ; tar zxf $fltk)
endif
tar zxf $pkg/acs/acs-$acs.tgz
tar zxf $pkg/ruby/ruby-$ruby.tar.gz

#                             root of $MANYBODY
set root=`pwd`
mkdir $root/tmp
mkdir $root/opt

set path=(. $root/bin $path); rehash

#PJT
goto testing
testing:

#                                                   gcc
if ($gcc != 0) then
  echo Installing gcc $gcc
  set log=$root/tmp/gcc.log
  tar jxf $pkg/gcc/gcc-$gcc.tar.bz2
  pushd gcc-$gcc
    (mkdir _build; cd _build; ../configure --prefix=$root/opt; make bootstrap; make; make install) >& $log
  popd
  rehash
endif

#                                                   ruby
echo Installing ruby
pushd ruby-1.8.2
  set log=$root/tmp/ruby.log
  ./configure --prefix=$root/opt   >& $log
  make                            >>& $log
  make install                    >>& $log
popd
rehash

#                                                   acs-lite
echo Installing acs
pushd acs
  set log=$root/tmp/acs.log
  setenv ACSROOT `pwd`
  source $ACSROOT/bin/acsstart.cshrc
  make acscode >& $log
  if (0) then
    # the long long path to make documentation
    # also assumes we have a local ruby
    cd $ACSROOT/src/rdoc*
    ruby install.rb
    cd $ACSROOT
    make
  endif
popd
rehash

#                                                   starlab
echo Installing starlab
pushd starlab_cvs
  set log=$root/tmp/starlab.log
  ./install-starlab >& $log
  source starlab_start.csh
  echo STARLAB-COUNT: `ls $STARLAB_INSTALL_PATH/bin|wc -l`
popd
rehash

#                                                   fltk (internal build only)
echo Installing fltk 
pushd partiview_cvs/src/fltk-1.1.4
  set log=$root/tmp/fltk.log
  ./configure >& $log
  make >>& $log
  if ($status) echo ERRORS compiling fltk, check install.log
popd
rehash

#                                                   partiview
echo Installing partiview
pushd partiview_cvs/src
  set log=$root/tmp/partiview.log 
  ./configure --with-fltk=`pwd`/fltk-1.1.4 >& $log
  make >>& $log
  if ($status) echo ERRORS compiling partiview, check $log
  # cp partiview $STARLAB/bin
popd

#                                                   nemo
echo Installing NEMO
pushd nemo_cvs
  set log=$root/tmp/nemo.log 
  source AAA_SOURCE_ME  >& $log
  make bins >>& $log
  echo NEMOBIN-COUNT: `ls $NEMOBIN|wc -l`
popd
rehash

# firstn
echo Installing firstn
pushd $NEMO/usr/aarseth/firstn
  set log=$root/tmp/firstn.log 
  make firstn >& $log
  if ($status) echo ERRORS compiling firstn, check $log  
  cp firstn $NEMOBIN
popd
rehash

# nbody6
echo Installing nbody6
mkdir $NEMO/usr/aarseth/nbody6
pushd $NEMO/usr/aarseth/nbody6
  set log=$root/tmp/nbody6.log 
  tar zxf $pkg/aarseth/nbody6/nbody6.tar.Z
  (cd Ncode ; make nbody6 ; cp nbody6 $NEMOBIN) >& $log
  if ($status) echo ERRORS compiling nbody6, check $log  
popd
rehash

# GalactICS
echo Installing galactICS
pushd $NEMO/usr/kuijken/GalactICS-exp/src
   set log=$root/tmp/gal.log
   make -f Makefile.nemo all install >& $log
   mknemo mkkd95 >& $log
popd
rehash

#                                                   GSL
echo Installing gsl
pushd $NEMO/local
  set log=$root/tmp/gsl.log 
  tar zxf $pkg/gsl/gsl-$gsl.tar.gz
  cd gsl-$gsl
  ./configure --prefix=$NEMO/opt  >& $log
  if ($status) echo ERRORS 1 compiling gsl, check $log
  make >>& $log
  if ($status) echo ERRORS 2 compiling gsl, check $log
  make install >>& $log
  if ($status) echo ERRORS 3 compiling gsl, check $log
popd
rehash

#                                                   fewbody, glstarview
echo Installing fewbody,glstarview
pushd $NEMO/usr/fregeau
  set log=$root/tmp/fewbody.log 
  tar zxf $pkg/fregeau/fewbody-$fewbody.tar.gz
  pushd fewbody-$fewbody
    make all  \
	CFLAGS="-I$NEMO/opt/include -Wall -O3" \
	LIBFLAGS="-L$NEMO/opt/lib -lgsl -lgslcblas -lm" >& $log
    if ($status) echo ERRORS compiling fewbody, check $log
    cp cluster triplebin binbin binsingle $NEMOBIN
  popd
  tar zxf $pkg/fregeau/glstarview-$glstarview.tar.gz
  pushd glstarview-$glstarview
    make -f Makefile.rh9 all >>& $log
    if ($status) echo ERRORS compiling glstarview, check $log
    cp glstarview $NEMOBIN
  popd
popd
rehash
#                                                   HNbody (binary only)
echo "Installing hnbody- for linux only"
pushd $NEMO/usr
  tar zxf $pkg/hnbody/hnbody-$hnbody.tgz
  ln -s hnbody-$hnbody hnbody
  foreach bin (ems  hnarith  hnbody  hnconvert  hnpaste  hnstats  hntac  lunar)
    mv hnbody/bin/$bin $NEMOBIN
  end
popd
rehash

#                                                   ds9
echo "Installing ds9 - for linux only"
pushd $NEMOBIN
  tar zxf $pkg/ds9/ds9.tar.gz
popd
rehash

#  xyz stuff
echo Compiling xyz from NEMO
  set log=$root/tmp/xyz.log 
  $NEMO/src/scripts/nemo.vogl  >& $log
  if ($status) echo ERRORS compiling vogl, check $log
  mknemo xyzview snapxyz      >>& $log
  if ($status) echo ERRORS compiling xyz, check $log

# EZ
echo Installing EZ
  set log=$root/tmp/ez.log 
  tar zxf $pkg/EZ/EZ_3_0_2.tar.gz
  pushd EZ_3_0_2
    if (0) then
       ./QUICK_INSTALL >& $log
    else
       (cd make; make EZ FC="ifort -w -132") >& $log
       if ($status) echo ERRORS compiling EZ, check $log
    endif
  popd

# Tioga
echo Installing Tioga
  set log=$root/tmp/tioga.log
  tar zxf $pkg/Tioga/Tioga-1.0.A-linux.tar.gz
  pushd Tioga-1.0.A
    (cd make; ruby extconf.rb ; make; make install) >& $log
    (cd tests; ruby ts_Tioga.rb) >>& $log
  popd
rehash

# MMAS
echo Installing MMAS
  set log=$root/tmp/mmas.log
  tar zxf $pkg/mmas/mmas1.6.tar.gz 
  pushd mmas1.6
    make >& $log
    if ($status) echo ERRORS compiling mmas, check $log
  popd
rehash

# FFTW v2, needed for starcrash
echo Installing FFTW
  set log=$root/tmp/fftw.log
  tar zxf $pkg/fftw/fftw-2.1.5.tar.gz
  pushd fftw-2.1.5
    ./configure --prefix=$root/opt   >& $log
    make >>& $log
    if ($status) echo ERRORS compiling fftw, check $log
    make install >>& $log
    if ($status) echo ERRORS installing fftw, check $log
  popd
rehash

# StarCrash
echo Instaling StarCrash
  set log=$root/tmp/starcrash.log
  tar zxf $pkg/StarCrash/starcrash_serial.tar.gz 
  pushd serial
    make testinput b2pos b2pos2 sphagr \
	FFTDIR=$root/fftw-2.1.5  FC=g77 CC=gcc  >& $log
    if ($status) echo ERRORS compiling starcrash, check $log
  popd
rehash

# -- end of install --
