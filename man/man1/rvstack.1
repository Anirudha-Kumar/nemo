.TH RVSTACK 1NEMO "6 June 2021"

.SH "NAME"
rvstack \- extract Radius-Velocity diagram from a data cube with selected stacking

.SH "SYNOPSIS"
\fBrvstack\fP in=cube out=map [parameter=value]

.SH "DESCRIPTION"
\fBrvstack\fP takes all points within a (narrow) wedge around the major or minor
axis of an assumed galaxy disk data cube, and stacks these data to
construct a Radius-Velocity diagram,
centered on the galaxy in position and velocity. The intent is to show the rotation
curve along the major axis, and (Z-axis) outflow along the minor axis.

By default it will stack the two sides of the galaxy (see also \fBside=\fP),
so the radial coordinate will run from 0 to some Rmax, and 
in velocity it will run from some -Vmax to Vmax.
This is done in such a way as to expect positive rotation around the Z axis,
and positive outflow along the Z axis, assuming the
position angle has been correctly set: \fBpa\fP of receding side for rotation, and
receding (near) side for outflow.
.PP
Weak signal rotation and/or bulk outflow could be detected this way, but we offer no guarentee.
If you have many like-minded galaxies, stacking these images may beat the noise down even more.
See also \fIccdstack(1NEMO)\fP for the subsequent stacking  of images produced with
\fBrvstack\fP.
.PP
Options exist to scale the Radius and Velocity to different units, such that
many galaxies can be stacked in physical space, as opposed to observed space. See
\fBrscale=\fP and \fBvscale=\fP.
.PP
.PP
When \fBgscale=t\fP is set, the coordinates are geometrically corrected as follows:
.nf
.ta +2.5i

Rotation		Outflow
--------		---------
R			R/sin(inc)
V/sin(inc)/cos(theta)	V/cos(inc)

.fi
where \fBtheta\fP is the position angle away from the major axis in the plane of the galaxy.
The radius \fBR\fP has been corrected for this as well.
this can leave some gaps in radius and velocity. See CAVEATS below.
.PP
Points along an arc are all accumulated (technically: averaged), and placed on the same radial grid
as the pixel size in the input data cube. We might need some trick next neighbor smoothing
in order for pixels near the center to have a value.

.SH "PARAMETERS"
.so man1/parameters
.TP 20
\fBin=\fP\fIimage_cube\fP
input data cube, in standard \fIimage(5NEMO)\fP format. The third axis must be velocity, or at least
match the units used in the \fBvlsr=\fP keyword below.
[No default]
.TP
\fBout=\fP\fIimage_map\fP
output R-V map. [No default]
.TP
\fBpa=\fP
position angle along which the wedge is taken. This is normally 
the \fBmajor axis receding side\fP (with mode=rotation) or
the \fBminor axis near side\fP (for mode=outflow), in order get a positive velocity signal in the RV map.
When \fBgscale=t\fP is set, will there be a difference how the radius and velocity
are scaled.
.TP
\fBinc=\fP
inclination angle of the disk [45]
.TP
\fBvsys=\fP
systemic velocity [0]   
.TP
\fBcenter=\fP\fIxpos,ypos\fP
rotation center (in pixel units, where 0,0=lower left). If not supplied, the reference pixel will be used.
Default: reference pixel.
.TP
\fBangle=\fP
full angle around the position angle \fBpa=\fP around which points are accumulated
into the R-V plot.  [Default: 10]
.TP
\fBblank=\fP
Value of the blank pixel to be ignored. [Default: 0.0]
.TP
\fBrscale=\fP
Scaling factor for radius. This would be used to stack galaxies based on some physical
(e.g. \fPkpc\fP) scaling, not geometry, see \fBgscale=\fP below.  [Default: 1]
.TP
\fBvscale=\fP
Scaling factor for velocity. This would be  used to stack galaxies based on a mass scaling,
not geometry, see \fBgscale=\fP below. [Default: 1]
.TP
\fBgscale=f|t\fP
A boolean if to scale for (inclination and position angle based) geometry. If selected,
rotation is scaled by 1/sin(i), outflow by 1/cos(i).
Radius is not scaled for rotation, but by 1/cos(i) for outflow.
Small position angle in the disk plane ("theta") based corrections are also applied.
[Default: f]
.TP
\fBmode=r|o\fP
Select output mode: rotation (r) or outflow (o).   [Default: r]
.TP
\fBside=0|-1|1\fP
By default it will stack both sides (0), but this option will allow you to stack one (1) or the other (-1)
side. [Default: 0]
.TP
\fBtab=t|f\fP
(debugging) write a test table.  [Default: f]
.TP
\fBjiggle=t|f\fP
Debugging spreading signal. Don't use.
.SH "CAVEATS"
Code is still under developement, in particular dealing with units is unresolved.
.PP
A wedge has the disadvantage the the noise decreases inversely proportional to the sqrt(radius),
but has a \fImatched-filter\fP approach to a conic outflow. An alternative would be to have
an option for \fBangle=\fP to be replaced with \fBwidth=\fP.
.PP
The gaps in radius and/or velocity produced with \fBgscale=t\fP can be a nuisance. For stacking
many images, for example using \fIccdstack(1NEMO)\fP,
this should disappear, but otherwise some smoothing/interpolation might be needed.
Not implemented.
.PP
Outflow is hard-coded as outflow along the Z axis. What should the off-axis relationship
be? Conical? No theta correction applied here, as we don't have a model like we have for rotation.
.SH "EXAMPLES"
An example using our standard NGC 6503 cube given in km/s velocity units.

.nf

  rvstack ngc6503.ccd rvma.ccd pa=-60 inc=75 vsys=27 center=164,123 rscale=3600 
  rvstack ngc6503.ccd rvmi.ccd pa=30  inc=75 vsys=27 center=164,123 rscale=3600 

  rvstack ngc6503_83.ccd rvma_83.ccd pa=-60 inc=75 vsys=27 center=129,128 rscale=3600 
  rvstack ngc6503_83.ccd rvmi_83.ccd pa=30  inc=75 vsys=27 center=129,128 rscale=3600 

.fi

Here is an example made with \fBmk_cone\fP
.nf
    $NEMO/scripts/csh/mk_cone out=cone2 rmin=0 vscale=0 outflow=0.5 cone=10 flow=rise noise=1
    
.fi

.SH "SEE ALSO"
ccdstack(1NEMO), ccdzshift(1NEMO), ccdmath(1NEMO), image(5NEMO), rotcur(5NEMO)
.PP
https://github.com/jbjolly/LineStacker

.SH "FILES"
.nf
src/image/rotcur/rvstack.c
scripts/csh/mk_cone - example script to create PPV cubr of disk + conic outflow along Z

https://www.cv.nrao.edu/fits/data/samples/cubes/ngc6503.fits  (old 1983 VLA data)
https://...   (TBD - new data)
.fi

.SH "AUTHOR"
Peter Teuben

.SH "UPDATE HISTORY"
.nf
.ta +1.50i +4.0i
6-may-2021	V0.4 First working version	PJT
31-may-2021	V0.7 better geometry correction	PJT
3-jun-2021	V0.8a clarify near/far side choice	PJT
.fi
