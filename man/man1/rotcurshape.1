.TH ROTCURSHAPE 1NEMO "21 July 2002"
.SH NAME
rotcurshape \- fit kinematic parameters from velocity field using shaped rotation curve
.SH SYNOPSIS
\fBrotcurshape in=\fPvelfie [parameters=values ...]
.SH DESCRIPTION
\fIrotcurshape\fP derives the kinematical parameters from the observed
velocity field by fitting a rotation curve shape to planar galactic disk.
Instead of dividing the galactic disk in a set of rings (see \fIrotcur(1NEMO)\fP)
it fits the shape of the rotation curve to a single plane. This is particularly
useful for low inclination galaxies and/or for central regions of a galaxy.
.PP
It does a non-linear least-squares-fitting to the function:
.PP
.cs 1 20
.ss 20
.nf
         v(x,y) = VSYS + VROT(r) * cos(theta) * sin(INC)

                      - (x-XPOS) * sin(PA) -/+ (y-YPOS) * cos(PA)  ?
where:   cos(theta) = ------------------------------------------
                                       r

.cs 1
.fi
and where the radius \fIr\fP is measured in the plane of the galaxy:
.cs 1 20
.ss 20
.nf

         r = sqrt( (x-XPOS)**2 + (y-YPOS)**2/cos(INC)**2 )

.cs 1
.fi
and the rotation curve VROT(r) can be selected from a number of predefined
shapes or dynamically loaded from a C-coded routine.
.PP
In the above formula
\fIv(x,y)\fP denotes the radial velocity at rectangular sky
coordinates \fIx\fP and \fIy\fP, \fIVSYS\fP the systemic 
velocity, \fIVROT\fP the rotational
velocity, \fIINC\fP the inclination angle and \fItheta\fP the 
azimuthal distance
from the major axis in the plane of the galaxy.  
In itself, \fItheta\fP is a function of
the inclination (\fIINC\fP) and the 
position angle (\fIPA\fP) of the major axis.
\fIXPOS\fP and \fIYPOS\fP denote the position of the rotation center
in pixels w.r.t. 0,0 being the lower left corner of the map.  \fIrotcur\fP
can fit for each ring the 6 parameters
\fIVSYS\fP, \fIVROT\fP, \fIINC\fP, \fIPA\fP, \fIXPOS\fP
and \fIYPOS\fP, though any combination of them can be fixed
(see \fBfixed=\fP).
The position angle \fIPA\fP of the major axis is defined as the
angle, taken in anti-clockwise direction between the north direction on
the ``sky'' and the major axis of the receding half (positive 
radial velocity) of the galaxy. 
.PP
Values equal the undefined value (currently 0.0) are ignored in the
fit. See \fIccdmath(1NEMO)\fP or \fIfitsccd(1NEMO)\fP on how to
create a velocity field with such undefined values.
.SH PARAMETERS
The following parameters are known (those with ** are still here
since we clones this off rotcur, but are likely to be slashed shortly):
.TP 25
\fBin\fP=\fIimage_vel\fP
Input velocity field map, must be in \fIimage(5NEMO)\fP format.
No default.
.TP
\fBradii\fP=\fIr0,r1\fP
Inner and outer radius for the disk area to fit (in arcsec).
The \fBunits=\fP keyword can be used to
scale your physical units in the header to ``human readable'' units
(arcsec). By default the whole disk will be used.
.TP
** \fBvrot\fP=\fIv1,v2,...vN\fP
Array of rotation (or expansion) velocities, one for each ring. 
If less than the number of rings is
given, the trailing ones are filled with the last supplied value.
.TP
\fBpa\fP=\fIpa\fP
Position angles (degrees) of the disk.
.TP
\fBinc\fP=\fIinc\fP
Inclination (degrees) of the disk.
.TP
\fBvsys\fP=\fIv0\fP
Systemic velocity.
.TP
\fBcenter\fP=\fIx0,y0\fP
Rotation center (grid units w.r.t. lower left corner being
0,0 for NEMO maps). Two numbers are required.
Default: center of map.
.TP
\fBfrang\fP=
free angle around minor axis (degrees), in the plane of
the galaxy, from which data is excluded from
the fit (thus the total cone size of ignored data around
the minor axis is 2*\fBfrang\fP)
[Default: \fB0.0\fP].
.TP
\fBside\fP=
Choose the side of the galaxy to fit the velocity field to.
Valid options are \fBreceding\fP, \fBapproaching\fP 
or \fBboth\fP side(s). [Default: \fBboth\fP].
.TP
\fBweight\fP=
Choice of weighting function with which points are weighed into
the least squares solution as a function of galactic angle away
from the major axis. Valid options are: \fBuniform\fP, \fBcosine\fP,
and \fBcos-squared\fP.
[Default: \fBcosine\fP].
.TP
\fBfixed\fP=
List of parameters, separated by commas, to be kept fixed during the fit.
Choose any of the
following: \fBvsys, vrot, pa, inc, xpos, ypos\fP, although at least
one parameters should be kept free. [Default: none, i.e. all parameters
free.
.TP
\fBellips\fP=
The names of two parameters for which to calculate an error ellips. 
(see \fBfixed=\fP). For the two parameters it shows the major
and minor axis, position angle of the one sigma deviation ellipse.
[Default: not used]
.TP
** \fBbeam\fP=
The beam size (FWHM) for beam correction. One or two numbers required.
Currently these are only used to correct error bars for the number
of independant points per beam. If not given, each point is assumed
independant. [no correction].
.TP
** \fBdens\fP=\fIimage_den\fP
Image containing the density. From this local derivatives
\fI(dN/dx)/N\fP and 
\fI(dN/dy)/N\fP are computed numerically, and used for an 
estimate of beam smearing corrections.
[Default: required if a beam is supplied].
.TP
\fBtab\fP=
If specified, this output table is used in \fIappend\fP mode!
This table can be piped through \fItabcomment(1NEMO)\fP and 
fed to \fIccdvel(1NEMO)\fP to create model velocity fields.
[Default: not used].
.TP
\fBresid\fP=
If specified, this output table will contain a listing of X, Y, Velocity
and Residual Velocities in each ring. Each ring will be separated from
the previous one with a simple commented line specifying which ring
it refers to. It is mostly intended for debugging purposes.
[Default: not used].
.TP
\fBtol\fP=
Tolerance for convergence of \fInllsqfit\fP [Default: \fB0.001\fP].
.TP
\fBlab\fP=
Mixing parameter for \fInllsqfit\fP [Default: \fB0.001\fP]
.TP
\fBitmax\fP=
Maximum number of allowed \fInllsqfit\fP iterations [Default: \fB50\fP]
.TP
\fBunits\fP=
Units of input axes for radius and velocity. Valid options are
\fBdeg, arcmin, arcsec, rad\fP for radius.
A numeric value can also be given,
in which case your image pixel separation from the
image header is multiplied by this
number to get to the ``arcsec'' that will be quoted in
the tables. The units for velocity can only be numeric, and will be the
factor by which the velocities in the map are multiplied.
[Default: \fBdeg\fP]
.TP
\fBblank=\fP
Value of the blank pixel that needs to be ignored. [Default: \fB0.0\fP].
.TP
** \fBinherit=t|f\fP
Logical denoting if the initial conditions for subsequent fitted rings
should be inherited from the previous successfully fitted ring. The fixed
parameters keep of course their fixed value. [Default: \fBt\fP]
.TP
** \fBfitmode=\fP\fBcos|sin\fP\fB,1\fP
.TP
\fBnsigma=\fP
Reject outlier points will fall outside nsigma times the dispersion 
away from the mean velocity in a ring. By default, it will not reject any outliers.
.TP
\fBimagemode=t|f\fP
Image input file mode? By default the input file is an image, alternatively a simple
ascii table with X and Y positions in columns 1 and 2, and radial velocities
in column 3. Future expansion will likely allow weight factors to be added
in other columns.
[Default: t]
.TP
\fBload=\fP
Name of a shared object file containing a rotation curve. ** Not implemented yet **
.TP
\fBrotcur1=\fP
Name of first rotation curve, followed by the initial estimates of its
parameters, followed by an equal number of 1s (free) and 0s (fixed) to denote
which parameters are free to fixed during the fitting process. 
.TP
\fBrotcur2=\fP
see rotcur1
.TP
\fBrotcur3=\fP
see rotcur1
.TP
\fBrotcur4=\fP
see rotcur1
.TP
\fBrotcur5=\fP
see rotcur1
.SH ROTCUR FUNCTIONS
A rotation curve function in terms of a least squares fitting need to provide
its caller with the rotation curve value, and all its partial derivates w.r.t.
the parameters. Most rotation curve shapes have two dimensional parameters,
a velocity and radial parameter, and are usually the first and second parameter.
Here are two examples, a simple linear rotation curve, and a  
slightly more involved Plummer disk/sphere rotation curve:
.nf
#include <nemo.h>

real rotcur_linear(real r, int n, real *p, real *d)
{
  d[0] = r;
  return p[0] * r;
}

real rotcur_plummer(real r, int np, real *p, real *d)
{
  real x = radius/p[1];
  real y = pow(1+x*x,-0.75);
  d[0] = y;
  d[1] = -x*p[0]/p[1]*(1-x*x/2)/(1+x*x)/y;
  return p[0] * x * y;
}
.fi
.PP
Here is a list of the builtin rotation curves, where x=r/a is the dimensionless radius:
.nf
.ta +1i +2i
Name:   Parameters:	Formula:
-----	-----------	--------
linear	omega(dv/dr)	v=omega*r
flat	v0		v=v0
plummer	v0,a		v=v0*x/(1+x^2)^(3/4)
core1	v0,a		v=v0*x/(1+x)
core2	v0,a		v=v0*x/(1+x^2)^(1/2)
.fi
.SH EXAMPLE
Here is an example of creating a synthetic velocity field with
ccdvel, and analysing it with rotcur:
.nf
    % set r=`nemoinp 0:60`
    % set v=`nemoinp 0:60 | tabmath - - "100*%1/(20+%1)" all`
    % ccdvel out=map1.vel rad="$r" vrot="$v" pa=30 inc=60
    % rotcurshape in=map1.vel radii=0,50 pa=30 inc=60 vsys=0 units=arcsec,1 \
         rotcur1=core1,100,20,1,1 tab=-
....

VSYS: 6.14085e-17 0.0272559
XPOS: 63.5 0.0171391
YPOS: 63.5 0.0225175
PA:   30.0004 0.0293586
INC:  60.0033 0.0645938
P1:  83.2638 0.155903
P2:  13.1505 0.0844784
NPT:  3926

	(NB: bad example)

.SH SEE ALSO
rotcur(1NEMO), ccdvel(1NEMO), tabcomment(1NEMO), rotcurves(1NEMO), pvtrace(1NEMO), ccdmom(1NEMO)
.SH AUTHOR
Peter Teuben
.SH UPDATE HISTORY
.nf
.ta +1i +4i
20-jul-02	1.0 cloned off rotcur		PJT
.fi
