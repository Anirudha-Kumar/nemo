.TH GYRFALCON 1NEMO "11 April 2004"
.SH NAME
gyrfalcON \- GalaxY simulatoR using falcON (NEMO version)
.SH SYNOPSIS
\fBgyrfalcON\fP [parameter=value]
.SH DESCRIPTION
\fBgyrfalcON\fP (versions before 1.5 were called YancNemo) is the
NEMO version of Walter Dehnen's tree code, 
where the approximate evaluation of gravitational forces is
extended and substantially accelerated by including mutual cell-cell
interactions. These are computed by a Taylor series in Cartesian coordinates
and in a completely symmetric fashion, such that Newton's third law is now
satisfied by construction and hence momentum exactly conserved. The
computational effort is further reduced by exploiting the mutual symmetry of
the interactions. For typical astrophysical problems with N=10^5 and at the
same level of accuracy, the new code is about four times faster than the tree
code. For large N, the computational costs are found to scale almost linearly
with N, which can also be supported by a theoretical argument, and the
advantage over the tree code increases with ever larger N.
.PP
The (NEMO) programs \fIaddgravity\fP and  \fIgetgravity\fP can be used
to obtain \fIfalcON\fP forces without the need of going through the integrator,
though \fBgyrfalcON\fP can also be used with \fBtstop=0\fP.
.PP
For a detailed description of usage, see also the \fIUser Guide for falcON\fP.
.SH PARAMETERS
The following parameters are recognized in any order if the keyword
is also given:
.TP 20
\fBin=\fP
Input file, needs to be in \fIsnapshot(5NEMO)\fP format. 
[No default]
.TP
\fBout=\fP
Output file, will be in \fIsnapshot(5NEMO)\fP format. Only required
if resume=f, which is the default.
.TP
\fBtstop=\fP
Time at which integration is stopped. The default is never!
(but notice \fBstopfile=\fP below).
.TP
\fBstep=\fP
Primary output step.
The value of 0 can be used if output at every timestep is requested.
[1]
.TP
\fBlogfile=\fP
file for log output (default: stderr). 
.TP
\fBstopfile=\fP
stop the simulation as soon as this file exists. Default: none.
.TP
\fBlogstep=\fP
Number of blocksteps between log outputs
[1]
.TP
\fBout2=\fP
Output file for secondary output stream (controlled by \fBstep2=\fP and \fBgive2=\fP).
.TP
\fBstep2=\fP
Secondary output step.
Again 0 signifies output at every step  [0]    
.TP
\fBtheta=\fP
tolerance parameter at M=M_tot
[0.6]
.TP
\fBhgrow=\fP
Grow fresh tree every 2^hgrow smallest steps. [0]
.TP
\fBNcrit=\fP
Maximum number of bodies a cell must
hold before it is considered for further sub-division in the tree building
stage of the code. [6]
.TP
\fBeps=\fP
Softening length OR maximum softening length [0.05]     
.TP
\fBkernel=\fP
Type of softening kernel P_n. This is an integer, for 0 the classic Plummer (old 20)
1 the Improved Plummer (old 21), 2 and 3 also valid improvements as 
discussed in the paper. Invalid entries will fall back to
Newtonion (with a warning message). 
[Default: 1]
.TP
\fBhmin=\fP
Timestep indicator such that tau_min = (1/2)^hmin. [Default: 6] 
.TP
\fBNlev=\fP
Number of time step levels [1].
.TP
\fBfac=\fP
tau = fac/acc. If more than one of \fBfac=\fP, \fBfph=\fP,
\fBfpa=\fP, or \fBfea=\fP  is non-zero, we use the minimum tau of these.
.TP
\fBfph=\fP
tau = fph/pot
.TP
\fBfpa=\fP
tau = fpa*sqrt(pot)/acc
.TP
\fBfea=\fP
tau = fpa*sqrt(eps)/acc
.TP
\fBresume=\fP
resume old simulation?  that implies:
1) read last snapshot from input file
2) append to input file (unless \fBout=\fP given)          
[f].
.TP
\fBgive=\fP
List of output specifications. Recognizing
\fBm\fP (mass), \fBx\fP (position), \fBv\fP (velocity), \fBa\fP (acceleration), \fBp\fP (N-body potential),
\fBP\fP (external potential, added to pot before output), 
\fBl\fP (time-step level, if they exist), \fBf\fP (body flag).
[Default: mxv]
.TP
\fBgive2=\fP
list of specifications for secondary output.
[Default: mxv]
.TP
\fBGrav=\fP
Value of the gravitational constant [1].
.TP
\fBpotname=\fP
Name of external potential. See also \fIpotential(5NEMO)\fP.
.TP
\fBpotpars=\fP
Parameters of external potential, if required.
.TP
\fBpotfile=\fP
Filename, if required by external potential.
.TP
\fBstartout=t|f\fP
Primary output for t=tstart? [t]
.TP
\fBlastout=t|f\fP
Primary output for t=tstop? [t]
.SH RESOURCES
For a 128k run, memory usage is about 18MB (was: 27MB?). This will scale roughly
linearly for larger systems. The following little benchmark 
.nf
	mkplummer - $N | gyrfalcON - . tstop=1
.fi
Will take about 78" for N=100,000 on a 2GHz Pentium-iv. It
scales slightly better than linear, for N=1,000,000 it takes
about 728".
.SH EXAMPLES
The benchmark in the Users Guide is a 10^5 Plummer sphere (default) integration:
.nf
	mkplummer - 100000 seed=1 scale=1 | gyrfalcON - out=plum.snp eps=0.1 

 0          -0.1469415    0.50366 0.0010751  6.6e-09  0.22   1.92       2.14      2.14
 0.015625   -0.1469414    0.50366 0.0010751  7.1e-09  0.17   1.86       2.04      4.26
 0.03125    -0.1469415    0.50366 0.0010751  5.4e-09  0.17   1.84       2.01      6.33
 0.046875   -0.1469414    0.50366 0.0010751  8e-09    0.17   1.84       2.01       8.4
 0.0625     -0.1469416    0.50366 0.0010751  8.6e-09  0.17   1.94       2.11     10.57
....

	(notice this is NEMO's  -DSINGLEPREC  version, the DOUBLE might be different)
.fi
.SH OUTPUT DATA WARNING
\fBgyrfalcON\fP, much like ZENO programs, writes a new type of SnapShot files,
in which the \fIPhaseSpace\fP array has been split into a
\fIPosition\fP and \fIVelocity\fP array. The \fIget_snap\fP macros 
understand this flavor, but will - for now - convert the data back
into the less flexible type with combined \fIPhaseSpace\fP coordinates.
.SH SEE ALSO
hackcode1(1NEMO), addgravity(1NEMO), getgravity(1NEMO), bench(5NEMO)
.PP
.nf
2000ApJ...536L..39D (A Very Fast and Momentum-conserving Tree Code, W. Dehnen)
2001MNRAS...324...273D
2002JCP...179...27D (A hierarchical O(N) Force Calculation Algorithm, W. Dehnen)
.fi
.SH FILES
.ta +5i
.nf
NEMO/usr/dehnen/falcON	source code
NEMO/usr/dehnen/yanc	source code (an old version, named YancNemo)
NEMO/usr/dehnen/falcON/doc/user_guide_pub.pdf	\fIUser Guide for falcON\fP.
.fi
.SH AUTHOR
Walter Dehnen
.SH UPDATE HISTORY
.nf
.ta +1.0i +5.0i
29-May-01	V1.0 manual written, at GH-2001 workshop at INAOE 	PJT
13-jun-01	1.0.2: added Ncrit
16-nov-01	1.0.15: aligned man page with actual code	PJT
4-jun-02	added theta=, and corrected log/linear statement	PJT
13-jun-02	1.2: imported into NEMO 	PJT
2-jan-03	1.5: renamed YancNemo to gyrfalcON, (WD version 091202) 	PJT
28-jul-03	1.6.1: also for gcc 3.3 (WD version 280703)	PJT
11-apr-04	aligned documentation, removed Yanc from NEMO   	PJT
.fi
