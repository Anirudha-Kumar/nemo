.TH TXTPAR 1NEMO "27 December 2021"

.SH "NAME"
txtpar \- extract parameters from a text file

.SH "SYNOPSIS"
.PP
\fBtxtpar in=\fPtext-file \fBp0=\fP \fBp1=\fP ...

.SH "DESCRIPTION"
\fBtxtpar\fP combines some of the often used combinations of
standard Unix text filtering programs like
\fIgrep(1)\fP,
\fIawk(1)\fP, and
\fIsed(1)\fP,
with a \fInemoinp(3NEMO)\fP style math into one "simple" NEMO program.
.PP
Normally one parameter is extracted per \fBp#=\fP directive, in a \fIword,row,col\fP fashion, however
multiple \fIcol's\fP are allowed per parameter directive, but discouraged.
.PP
Comment lines in the input file are considered part of the text, they are not stripped out. Use
\fItabcomment(1NEMO)\fP first if you really need them removed.
.PP
Additional math is allowed on the extracted parameters using \fInemoinp(1NEMO)\fP style expressions. In
this case, the parameters themselves are not output, but only the expressions. See EXAMPLES below
if you need both.

.SH "PARAMETERS"
.so man1/parameters
.TP 20
\fBin=\fIin-file\fP
input text file, containing marker words and numeric values to be parsed. 
No default.
.TP
\fBexpr=\fP\fIexpr1,...\fP
Expression(s) based on the parameters grabbed. By default each parameter
is output as they appeared in the text file, however if \fBexpr=\fP is used, only those
newly computed values are output.  Default: only original values output
.TP
\fBformat=\fP\fIexpression\fP
A (\fIprintf(3)\fP) format specification applied to the computed expressions
with which the parameters are written to output [\fB%g\fP].
.TP
\fBseed=\fP\fIseed\fP
Integer initial seed in case random numbers have been used in the expression.
If 0 is given, the time of the day will be used (see 
\fIxrandom(3NEMO)\fP for other special seed values)
to initialize the random number generator. [Default: \fB0\fP].
.TP
\fBmaxlines=\fP
In case a NEMO/unix pipe is used, the maximum number of lines will need to be specified. [10000]
.TP
\fBnewline=t|f\fP
Should a newline be used between output values. [f]
.TP
\fBp#=\fP\fIword,row,col,...\fP
Parameter directive in the indexed keyword notation (e.g. p0=, p1=, p2=), see \fIgetparam(3NEMO)\fP.
\fIword\fP is the string to search on (with some limited grep syntax), but can be blank.
\fIrow\fP is the row occurance looking for. 1 would be the first, 2 the 2nd, -1 the last, -2 the one but last etc.
\fIcol\fP is the "column" to look for, 1 would be the first word, -1 the last etc. Multiple \fIcol\fP are allowed,
but is discouraged.

.SH "EXAMPLES"
Here is
.nf
       txtpar in=example.txt expr="log(abs(%1)),log(abs(%2/%1))" format=%.3f \\
              p1=^Worst,1,9  p2=^QAC,1,3 par3=^QAC,1,4
	
.fi
This would output two values.
.PP
If both original values as well as new computed \fBexpr=\fP are desired in the output (this is the default
behavior in \fItabmath(1NEMO)\fP), an extra pipe using
\fItabmath(1NEMO)\fP) is needed. Here is an example to add the first column in the first two lines of a table
in both forms, with and without the original values
.nf

      txtpar example.txt p0=,1,1 p1=,2,1 | tabmath - - %1+%2 format=%.3f
      txtpar example.txt %1+%2 %.3f p0=,1,1 p1=,2,1 

.fi

.SH "CAVEATS"
This program is not intended for streaming very large files, as the file is read into memory for processing
and each parameter could potentially cause a search through the file.

.SH "SEE ALSO"
grep(1), awk(1), cut(1), tabmath(1NEMO), tablines(1NEMO), table(5NEMO)

.SH "AUTHOR"
Peter Teuben

.SH "UPDATE HISTORY"
.nf
.ta +1.0i +4.0i
27-dec-2021	V0.1 simple draft written - implemented simple version	PJT
.fi
