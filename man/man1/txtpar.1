.TH TXTPAR 1NEMO "27 December 2021"

.SH "NAME"
txtpar \- grab parameters from a text file

.SH "SYNOPSIS"
.PP
\fBtxtpar in=\fPtext-file ...

.SH "DESCRIPTION"
\fBtxtpar\fP combines some of the often used combinations of
standard Unix text filtering programs like
\fIgrep(1)\fP,
\fIawk(1)\fP,
\fIcut(1)\fP, and
\fIsed(1)\fP,
with a bit of math using \fInemoinp(3NEMO)\fP into one "simple" program.

.SH "PARAMETERS"
.so man1/parameters
.TP 20
\fBin=\fIin-file\fP
input text file, containing marker words and numeric values to be parsed.
.TP
\fBpar#=\fP\fIgrep,row,col\fP
\fIgrep\fP is the string to grep on (with very limited options),
\fIrow\fP is the row occurance looking for. 1 would be the first, 2 the 2nd, -1 the last, -2 the one but last etc.
\fIcol\fP is the "column" to look for, 1 would be the first word, -1 the last etc.
.TP
\fBexpr=\fP\fIexpr1,...\fP
Expression(s) based on the parameters grabbed. By default each parameter
is output as they appeared in the text file.
.TP
\fBformat=\fP\fIexpression\fP
A (\fIprintf(3)\fP) format specification
with which the parameters are written to output [\fB%g\fP].
.TP
\fBseed=\fP\fIseed\fP
Integer initial seed in case random numbers have been used in the expression.
If 0 is given, the time of the day will be used (see 
\fIxrandom(3NEMO)\fP for other special seed values)
to initialize the random number generator. [Default: \fB0\fP].
.TP
\fBnewline=t|f\fP
Should a newline be used between output values.

.SH "EXAMPLES"
Here is
.nf
	txtpar in=example.tab par1=^Worst,1,9  par2=^QAC,1,3 par3=^QAC,1,4 \\
	       expr="log(abs(%1)),log(abs(%2/%1))" format=%.3f
.fi
This would output two values

.SH "CAVEATS"
This program is not intended for streaming large files, as the file is read into memory for processing.

.SH "SEE ALSO"
grep(1), awk(1), cut(1), sed(1), tabmath(1NEMO), tablines(1NEMO), tabtranspose(1NEMO), tabplot(1NEMO), table(5NEMO)

.SH "AUTHOR"
Peter Teuben

.SH "UPDATE HISTORY"
.nf
.ta +1.0i +4.0i
27-dec-2021	V0.1 simple draft written	PJT
.fi
