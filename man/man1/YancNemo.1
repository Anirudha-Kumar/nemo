.TH YANCNEMO 1NEMO "13 June 2002"
.SH NAME
YancNemo \- Yet Another N-body Code (NEMO version)
.SH SYNOPSIS
\fBYancNemo\fP [parameter=value]
.SH DESCRIPTION
\fBYancNemo\fP is Dehnen's version of the 
tree code, where the approximate evaluation of gravitational forces is
extended and substantially accelerated by including mutual cell-cell
interactions. These are computed by a Taylor series in Cartesian coordinates
and in a completely symmetric fashion, such that Newton's third law is now
satisfied by construction and hence momentum exactly conserved. The
computational effort is further reduced by exploiting the mutual symmetry of
the interactions. For typical astrophysical problems with N=10^5 and at the
same level of accuracy, the new code is about four times faster than the tree
code. For large N, the computational costs are found to scale almost linearly
with N, which can also be supported by a theoretical argument, and the
advantage over the tree code increases with ever larger N.
.PP
\fBYancNemo\fP is the NEMOfied version, the barebone version is named YANC.
.SH PARAMETERS
The following parameters are recognized in any order if the keyword
is also given:
.TP 20
\fBin=\fP
Input file, needs to be in \fIsnapshot(5NEMO)\fP format. [???]
.TP
\fBout=\fP
Output file, will be in \fIsnapshot(5NEMO)\fP format. [???]     
.TP
\fBtstop=\fP
Time at which integration is stopped. Also called \fBtcrit\fP in
Aarseth's nbody* series. [10]     
.TP
\fBstep=\fP
Output integration step. Some other codes use 1/freqout, or \fBdeltat\fP for this
 [1]    
.TP
\fBlogout=\fP
file for log output (default: stderr)
.TP
\fBout2=\fP
file for secondary output stream (see \fBgive2=\fP below).
.TP
\fBstep2=\fP
time between secondary outputs; 0 -> every step  [0]    
.TP
\fBtheta=\fP
tolerance parameter at M=M_tot
[0.6]
.TP
\fBNreuse=\fP
Max number of subsequent tree re-uses [0].
.TP
\fBNcrit=\fP
Maximum number of bodies a cell must
hold before it is considered for further sub-division in the tree building
stage of the code. [6]
.TP
\fBeps=\fP
Softening length [0.05]     
.TP
\fBkernel=\fP
Type of softening kernel. This is an integer, with n/(10+n)/20/21
for Fn/Kn/Plummer/Improved, and will likely add more kernels in the
future. [21]
.TP
\fBhmin=\fP
Timestep indicator such that tau_min = (1/2)^hmin. [Default: 6] 
.TP
\fBNlev=\fP
Number of time step levels [1].
.TP
\fBfac=\fP
tau = fac/acc. If more than one of \fBfac=\fP, \fBfph=\fP or 
\fBfpa=\fP is non-zero, we use the minimum tau.
.TP
\fBfph=\fP
tau = fph/pot
.TP
\fBfpa=\fP
tau = fpa*sqrt(pot)/acc
.TP
\fBresume=\fP
resume old simulation?  that implies:
1) read last snapshot from input file
2) append to input file (unless out given)          
[f].
.TP
\fBgive=\fP
List of output specifications. Recognizing
m (mass), x (position), v (velocity), a (acceleration), p (N-body potential),
P (external potential) and r (density estimate).
[Default: mxv]
.TP
\fBgive2=\fP
list of specifications for secondary output.
[Default: mxv]
.TP
\fBpotname=\fP
Name of external potential
.TP
\fBpotpars=\fP
parameters of external potential
.TP
\fBpotfile=\fP
Filename, if required by external potential.
.TP
\fBstartout=t|f\fP
give snapshot for t=tstart? [t]
.SH RESOURCES
For a 128k run, memory usage is about 27MB. This will scale roughly
linearly for larger systems. The following little benchmark 
.nf
	mkplummer - $N | YancNemo - . tstop=1
.fi
Will take about 78" for N=100,000 on a 2GHz Pentium-iv. It
scales slightly better than linear, for N=1,000,000 it takes
about 728".
.SH EXAMPLES
.SH SEE ALSO
hackcode1(1NEMO)
.PP
2000ApJ...536L..39D (A Very Fast and Momentum-conserving Tree Code, W. Dehnen)
.SH FILES
.SH AUTHOR
Walter Dehnen
.SH UPDATE HISTORY
.nf
.ta +1.0i +4.0i
29-May-01	V1.0 manual written, at GH-2001 workshop at INAOE 	PJT
13-jun-01	1.0.2: added Ncrit
16-nov-01	1.0.15: aligned man page with actual code	PJT
4-jun-02	added theta=, and corrected log/linear statement	PJT
13-jun-02	1.2: imported into NEMO 	PJT
.fi

