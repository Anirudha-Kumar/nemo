.TH TRICKS 8NEMO "6 March 1989"
.SH NAME
tricks \- some unix tricks when using NEMO
.SH DESCRIPTION
One can use \fIcat(1)\fP to catenate structured binary files, e.g.
.nf
	\fBcat r001a.dat >>r001.dat\fP
.fi
.PP
To copy structured binary files between machines of different binary
format, use the \fItsf(1NEMO), rsf(1NEMO)\fP programs and, if available,
the \fIcompress(1), uncompress(1)\fP utilities:
.nf
	\fBtsf in=r001.dat maxprec=t allline=t | compress >> r001.data.Z\fP
and on the other machine:
	\fBzcat r001.data.Z | rsf - r001.dat\fP
.fi
On non-Unix supercomputers, often the ASCII
"205" format (see e.g. \fIatos(1NEMO)\fP)
will be used. This may be saved in compressed format also, and can
be processed by NEMO after
.nf
	\fBzcat r001.data.Z | atos - r001.dat\fP
.fi
See also the \fItcppipe(1NEMO)\fP program to read the data over
a pipe from another machine.
.PP
Some N-body programs, which are capable of handling a series of snapshots,
and selecting them using the \fBtimes=\fP keyword, are not able to
handle subsequent snapshots which are larger than the first one. In fact, 
unpredictable things may happen, although usually it results in
a core because of illegal memory access. There are two solutions.
The program can be recompiled, by using a \fB-DREALLOC\fP flag or
\fB#define\fP it in the source code. The second solution is to prepend
the datafile with a large enough 'dummy' file.
.PP
To display a scatter diagram in the form of a contour map, convert
the two columns to a snapshot by calling them 'x' and 'y' coordinates.
Remaining phase space coordinates are unimportant. Set masses to 1, and
use the \fIatos(1NEMO)\fP format. A program like \fIawk(1)\fP can write
the file for \fIatos(1NEMO)\fP, then \fIsnapgrid(1NEMO)\fP creates a
\fIimage(5NEMO)\fP file, which can be optionally smoothed using
\fIccdsmooth(1NEMO)\fP and displayed with \fIccdplot(1NEMO)\fP. In case
your host has nicer contour plotting programs, use \fIccdfits(1NEMO)\fP
to write a \fIfits(5NEMO)\fP format file.
Check also the tabccd shell script, if available, or perhaps someone
wrote it in C already. It calls awk, atos and snapgrid.
.PP
The \fIds9(1)\fP program is one of the external programs
which can be used to display images. \fIds9\fP can understand a
variety of FITS compression standards.
Transform your image to a fits file using \fIccdfits(1NEMO)\fP, and use 
ds on that fits file. 
.SH PIPES and SHARED MEMORY
NEMO encourages you to use pipes where serial operations make sense (see also \fItee(1)\fP).
However on Linux, assuming you have enough memory, using /dev/shm will sacrifice your memory to store
data temporarely and could speed up your I/O dominated workflow. Here is an example:
.nf
       mkdir /dev/shm/$USER
       cd /dev/shm/$USER
       mkspiral s000 1000000 nmodel=40
.fi
The example of \fImkspiral(1NEMO)\fP is taken from the NEMO \fIbench(5NEMO)\fP suite, but this example
is actually not very I/O dominated. The variable $XDG_RUNTIME_DIR can also be used, or $TMPDIR,
depending on your system configuration.
.PP
Using \fItcppipe(1NEMO)\fP one can read data produced on other machines
.PP
\fIzrun(1)\fP can uncompress on the fly, by prepending it to the command
.nf
	zrun fitsccd ngc6503.fits.gz - | tsf -
.fi
.PP
\fIpee(1)\fP is tee for pipes
.PP
\fIsponge(1)\fP soaks up standard input and writes to a file
.PP
\fIvipe(1)\fP edits a pipe using your editor,e.g.
.nf
	command1 | vipe | command2
.fi
.SH PARALLEL
Most programs in NEMO are still single-core, but many current machines have a number of cores. If a program only
uses a fraction of the memory on the machine, the GNU \fIparallel(1)\fP program can be used to spread the load,
e.g.
.nf
       echo mkplummer . 10000 > run.txt
       echo mkplummer . 10000 >> run.txt
       parallel --jobs 2 < run.txt
.fi
which will run both jobs in parallel

.SH SEE ALSO
nemo(1NEMO), bench(5NEMO), tee(1), pee(1), netcat(1), zrun(1), parallel(1), sponge(1), vipe(1)
.SH AUTHOR
Peter Teuben.
.SH "UPDATE HISTORY"
.nf
.ta +1.0i +4.5i
18-Aug-88	Document created	PJT 
5-mar-89	tabccd added         	PJT
6-mar-89	ds added          	PJT
9-oct-90	fixed some typos	PJT
jan-2020	added pipe/shm		PJT
.fi
