#! /bin/csh -f
#
#  populate an exponential disk with a series of clusters (virialized plummer spheres)
#  for a range of shapes and masses, but following some size-linewidth relation
#

#  root name of files
set run     = run000

#  number of clusters
set nc      = 100
#  number of points per cluster
set nppc    = 100
#  fraction of plummer to use
set mfrac   = 0.5
#  exponential scale length
set alpha   = 4.0
#  cutoff radius
set rcut    = 1.5
#  relative heat of the clusters
set Qtoomre = 0.0
#  thickness of disk
set z0      = 0.01
#  inclination of disk
set inc     = 60
#  size range of clusters
set r0      = 0.01
set r1      = 0.1
set virial  = 0.5
# 
set debug   = 0 
#
set nxy     = 512
set nz      = 256
set beam    = 0.01


# ===========================================================================

foreach arg ($*)
  set $arg
end

# 0) start with a clean slate in case previous run
#    and set some derived variables
rm -rf $run.*
if (0) then
  set ms=`nemoinp 1/$nc`
  set rs=`nemoinp $r0`
  set vs=`nemoinp "sqrt(1/$nc/$r0)"`
  echo Scaling: $ms $rs $vs
endif

# 1) create an exponential disk where the clusters are going to be
#
mkexpdisk $run.1 $nc alpha=$alpha rcut=$rcut \
    Qtoomre=$Qtoomre z0=$z0
snapprint $run.1 > $run.2

# 2) create a small plummer sphere for each point in the disk, and
#    accumulate that in a final big snapshot file ($run.4)
echo "Creating $nc clusters of $nppc particles each"
echo "# i     pos(3)  vel(3)    radius" > $run.2a
foreach i (`seq $nc`)
  echo -n .
  set pv=(`getline $run.2 $i`)
  #  @todo: set random size and mass, then virialize
  set r=`nemoinp "ranu($r0,$r1)" seed=-1`

  #  @todo mass always same ??
  set ms=`nemoinp 1/$nc`
  set rs=`nemoinp $r`
  set vs=`nemoinp "sqrt(1/$nc/$r)"`

  echo $i $pv $r >> $run.2a
    
  mkplummer - $nppc mfrac=$mfrac seed=-1 |\
    snapscale - - mscale=$ms rscale=$rs |\
    hackforce - - fcells=2 debug=-1 |\
    snapvirial - - mscale=f rscale=f vscale=t virial=$virial debug=-1 |\
    snapshift - - $pv[1],$pv[2],$pv[3]  $pv[4],$pv[5],$pv[6] |\
    csf - - SnapShot debug=-1 >> $run.4
end
echo ""

# 3) merge the snapshot and rotate it to be viewed along a given inclination
#
echo Merge and Rotate
snapmerge $run.4 - |\
  snaprotate - $run.5 $inc x

# 4) grid and view the snapshot in a variety of ways
#
echo Gridding
snapgrid $run.5 $run.6a nx=$nxy ny=$nxy moment=0 svar=$beam
snapgrid $run.5 $run.6b nx=$nxy ny=$nxy moment=1 svar=$beam
snapgrid $run.5 $run.7  nx=$nxy ny=$nxy nz=$nz zrange=-2:2
echo Smoothing
ccdsmooth $run.7 $run.7a dir=xyz nsmooth=1
ccdsmooth $run.7 $run.7b dir=xyz nsmooth=2
echo Moments
ccdmom $run.7b $run.8a axis=3 mom=0
ccdmom $run.7b $run.8b axis=3 mom=1
ccdmom $run.7b $run.8c axis=3 mom=2
ccdmom $run.7b $run.8d axis=3 mom=3
ccdrt  $run.7b $run.8e peak=f
ccdrt  $run.7b $run.8f peak=t
